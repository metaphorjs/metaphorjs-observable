{
  "sections": {},
  "items": [
    {
      "isApiItem": true,
      "type": "class",
      "name": "ObservableEvent",
      "fullName": "class:ObservableEvent",
      "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/ObservableEvent.js",
      "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/ObservableEvent.js",
      "fileType": "js",
      "template": "js.item.class",
      "level": 1,
      "flags": {
        "access": [
          {
            "contentType": "string",
            "content": "private",
            "template": "js.flag.access"
          }
        ]
      },
      "plainFlags": {
        "access": [
          "private"
        ]
      },
      "booleanFlags": [],
      "children": [
        {
          "isApiGroup": true,
          "type": "method",
          "name": "Method",
          "groupName": "Methods",
          "items": [
            {
              "isApiItem": true,
              "type": "method",
              "name": "getName",
              "fullName": "class:ObservableEvent.getName",
              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/ObservableEvent.js",
              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/ObservableEvent.js",
              "fileType": "js",
              "template": "js.item.method",
              "level": 2,
              "flags": {
                "returns": [
                  {
                    "contentType": "string",
                    "content": "string",
                    "template": "js.flag.returns"
                  }
                ]
              },
              "plainFlags": {
                "returns": [
                  "string"
                ]
              },
              "booleanFlags": [],
              "children": [],
              "childTypes": [],
              "line": 64,
              "description": [
                {
                  "contentType": "string",
                  "content": "Get event name",
                  "template": "js.flag.description"
                }
              ]
            },
            {
              "isApiItem": true,
              "type": "method",
              "name": "destroy",
              "fullName": "class:ObservableEvent.destroy",
              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/ObservableEvent.js",
              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/ObservableEvent.js",
              "fileType": "js",
              "template": "js.item.method",
              "level": 2,
              "flags": {},
              "plainFlags": {},
              "booleanFlags": [],
              "children": [],
              "childTypes": [],
              "line": 71
            },
            {
              "isApiItem": true,
              "type": "method",
              "name": "on",
              "fullName": "class:ObservableEvent.on",
              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/ObservableEvent.js",
              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/ObservableEvent.js",
              "fileType": "js",
              "template": "js.item.method",
              "level": 2,
              "flags": {},
              "plainFlags": {},
              "booleanFlags": [],
              "children": [
                {
                  "isApiGroup": true,
                  "type": "param",
                  "items": [
                    {
                      "isApiItem": true,
                      "type": "param",
                      "name": "fn",
                      "fullName": "class:ObservableEvent.on/fn",
                      "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/ObservableEvent.js",
                      "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/ObservableEvent.js",
                      "fileType": "js",
                      "template": "js.item.param",
                      "level": 3,
                      "flags": {
                        "type": [
                          {
                            "contentType": "string",
                            "content": "function",
                            "template": "js.flag.type"
                          }
                        ]
                      },
                      "plainFlags": {
                        "type": [
                          "function"
                        ]
                      },
                      "booleanFlags": [
                        "required"
                      ],
                      "children": [],
                      "childTypes": [],
                      "line": 86,
                      "description": [
                        {
                          "contentType": "string",
                          "content": "Callback function",
                          "template": "js.flag.description"
                        }
                      ]
                    },
                    {
                      "isApiItem": true,
                      "type": "param",
                      "name": "context",
                      "fullName": "class:ObservableEvent.on/context",
                      "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/ObservableEvent.js",
                      "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/ObservableEvent.js",
                      "fileType": "js",
                      "template": "js.item.param",
                      "level": 3,
                      "flags": {
                        "type": [
                          {
                            "contentType": "string",
                            "content": "object",
                            "template": "js.flag.type"
                          }
                        ]
                      },
                      "plainFlags": {
                        "type": [
                          "object"
                        ]
                      },
                      "booleanFlags": [],
                      "children": [],
                      "childTypes": [],
                      "line": 86,
                      "description": [
                        {
                          "contentType": "string",
                          "content": "Function's \"this\" object",
                          "template": "js.flag.description"
                        }
                      ]
                    },
                    {
                      "isApiItem": true,
                      "type": "param",
                      "name": "options",
                      "fullName": "class:ObservableEvent.on/options",
                      "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/ObservableEvent.js",
                      "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/ObservableEvent.js",
                      "fileType": "js",
                      "template": "js.item.param",
                      "level": 3,
                      "flags": {
                        "type": [
                          {
                            "contentType": "string",
                            "content": "object",
                            "template": "js.flag.type"
                          }
                        ]
                      },
                      "plainFlags": {
                        "type": [
                          "object"
                        ]
                      },
                      "booleanFlags": [],
                      "children": [],
                      "childTypes": [],
                      "line": 86,
                      "description": [
                        {
                          "contentType": "string",
                          "content": "See [class:Observable.on](#class:Observable.on)",
                          "template": "js.flag.description"
                        }
                      ]
                    }
                  ]
                }
              ],
              "childTypes": [
                "param"
              ],
              "line": 86
            },
            {
              "isApiItem": true,
              "type": "method",
              "name": "once",
              "fullName": "class:ObservableEvent.once",
              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/ObservableEvent.js",
              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/ObservableEvent.js",
              "fileType": "js",
              "template": "js.item.method",
              "level": 2,
              "flags": {},
              "plainFlags": {},
              "booleanFlags": [],
              "children": [
                {
                  "isApiGroup": true,
                  "type": "param",
                  "items": [
                    {
                      "isApiItem": true,
                      "type": "param",
                      "name": "fn",
                      "fullName": "class:ObservableEvent.once/fn",
                      "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/ObservableEvent.js",
                      "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/ObservableEvent.js",
                      "fileType": "js",
                      "template": "js.item.param",
                      "level": 3,
                      "flags": {
                        "type": [
                          {
                            "contentType": "string",
                            "content": "function",
                            "template": "js.flag.type"
                          }
                        ]
                      },
                      "plainFlags": {
                        "type": [
                          "function"
                        ]
                      },
                      "booleanFlags": [
                        "required"
                      ],
                      "children": [],
                      "childTypes": [],
                      "line": 154,
                      "description": [
                        {
                          "contentType": "string",
                          "content": "Callback function",
                          "template": "js.flag.description"
                        }
                      ]
                    },
                    {
                      "isApiItem": true,
                      "type": "param",
                      "name": "context",
                      "fullName": "class:ObservableEvent.once/context",
                      "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/ObservableEvent.js",
                      "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/ObservableEvent.js",
                      "fileType": "js",
                      "template": "js.item.param",
                      "level": 3,
                      "flags": {
                        "type": [
                          {
                            "contentType": "string",
                            "content": "object",
                            "template": "js.flag.type"
                          }
                        ]
                      },
                      "plainFlags": {
                        "type": [
                          "object"
                        ]
                      },
                      "booleanFlags": [],
                      "children": [],
                      "childTypes": [],
                      "line": 154,
                      "description": [
                        {
                          "contentType": "string",
                          "content": "Function's \"this\" object",
                          "template": "js.flag.description"
                        }
                      ]
                    },
                    {
                      "isApiItem": true,
                      "type": "param",
                      "name": "options",
                      "fullName": "class:ObservableEvent.once/options",
                      "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/ObservableEvent.js",
                      "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/ObservableEvent.js",
                      "fileType": "js",
                      "template": "js.item.param",
                      "level": 3,
                      "flags": {
                        "type": [
                          {
                            "contentType": "string",
                            "content": "object",
                            "template": "js.flag.type"
                          }
                        ]
                      },
                      "plainFlags": {
                        "type": [
                          "object"
                        ]
                      },
                      "booleanFlags": [],
                      "children": [],
                      "childTypes": [],
                      "line": 154,
                      "description": [
                        {
                          "contentType": "string",
                          "content": "See [class:Observable.on](#class:Observable.on)",
                          "template": "js.flag.description"
                        }
                      ]
                    }
                  ]
                }
              ],
              "childTypes": [
                "param"
              ],
              "line": 154
            },
            {
              "isApiItem": true,
              "type": "method",
              "name": "un",
              "fullName": "class:ObservableEvent.un",
              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/ObservableEvent.js",
              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/ObservableEvent.js",
              "fileType": "js",
              "template": "js.item.method",
              "level": 2,
              "flags": {},
              "plainFlags": {},
              "booleanFlags": [],
              "children": [
                {
                  "isApiGroup": true,
                  "type": "param",
                  "items": [
                    {
                      "isApiItem": true,
                      "type": "param",
                      "name": "fn",
                      "fullName": "class:ObservableEvent.un/fn",
                      "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/ObservableEvent.js",
                      "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/ObservableEvent.js",
                      "fileType": "js",
                      "template": "js.item.param",
                      "level": 3,
                      "flags": {
                        "type": [
                          {
                            "contentType": "string",
                            "content": "function",
                            "template": "js.flag.type"
                          }
                        ]
                      },
                      "plainFlags": {
                        "type": [
                          "function"
                        ]
                      },
                      "booleanFlags": [
                        "required"
                      ],
                      "children": [],
                      "childTypes": [],
                      "line": 167,
                      "description": [
                        {
                          "contentType": "string",
                          "content": "Callback function",
                          "template": "js.flag.description"
                        }
                      ]
                    },
                    {
                      "isApiItem": true,
                      "type": "param",
                      "name": "context",
                      "fullName": "class:ObservableEvent.un/context",
                      "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/ObservableEvent.js",
                      "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/ObservableEvent.js",
                      "fileType": "js",
                      "template": "js.item.param",
                      "level": 3,
                      "flags": {
                        "type": [
                          {
                            "contentType": "string",
                            "content": "object",
                            "template": "js.flag.type"
                          }
                        ]
                      },
                      "plainFlags": {
                        "type": [
                          "object"
                        ]
                      },
                      "booleanFlags": [],
                      "children": [],
                      "childTypes": [],
                      "line": 167,
                      "description": [
                        {
                          "contentType": "string",
                          "content": "Callback context",
                          "template": "js.flag.description"
                        }
                      ]
                    }
                  ]
                }
              ],
              "childTypes": [
                "param"
              ],
              "line": 167
            },
            {
              "isApiItem": true,
              "type": "method",
              "name": "hasListener",
              "fullName": "class:ObservableEvent.hasListener",
              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/ObservableEvent.js",
              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/ObservableEvent.js",
              "fileType": "js",
              "template": "js.item.method",
              "level": 2,
              "flags": {
                "returns": [
                  {
                    "contentType": "string",
                    "content": "boolean",
                    "template": "js.flag.returns"
                  }
                ]
              },
              "plainFlags": {
                "returns": [
                  "boolean"
                ]
              },
              "booleanFlags": [],
              "children": [],
              "childTypes": [],
              "line": 208
            },
            {
              "isApiItem": true,
              "type": "method",
              "name": "hasListener",
              "fullName": "class:ObservableEvent.hasListener",
              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/ObservableEvent.js",
              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/ObservableEvent.js",
              "fileType": "js",
              "template": "js.item.method",
              "level": 2,
              "flags": {
                "returns": [
                  {
                    "contentType": "string",
                    "content": "boolean",
                    "template": "js.flag.returns"
                  }
                ]
              },
              "plainFlags": {
                "returns": [
                  "boolean"
                ]
              },
              "booleanFlags": [],
              "children": [
                {
                  "isApiGroup": true,
                  "type": "param",
                  "items": [
                    {
                      "isApiItem": true,
                      "type": "param",
                      "name": "fn",
                      "fullName": "class:ObservableEvent.hasListener/fn",
                      "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/ObservableEvent.js",
                      "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/ObservableEvent.js",
                      "fileType": "js",
                      "template": "js.item.param",
                      "level": 3,
                      "flags": {
                        "type": [
                          {
                            "contentType": "string",
                            "content": "function",
                            "template": "js.flag.type"
                          }
                        ]
                      },
                      "plainFlags": {
                        "type": [
                          "function"
                        ]
                      },
                      "booleanFlags": [
                        "required"
                      ],
                      "children": [],
                      "childTypes": [],
                      "line": 215,
                      "description": [
                        {
                          "contentType": "string",
                          "content": "Callback function",
                          "template": "js.flag.description"
                        }
                      ]
                    },
                    {
                      "isApiItem": true,
                      "type": "param",
                      "name": "context",
                      "fullName": "class:ObservableEvent.hasListener/context",
                      "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/ObservableEvent.js",
                      "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/ObservableEvent.js",
                      "fileType": "js",
                      "template": "js.item.param",
                      "level": 3,
                      "flags": {
                        "type": [
                          {
                            "contentType": "string",
                            "content": "object",
                            "template": "js.flag.type"
                          }
                        ]
                      },
                      "plainFlags": {
                        "type": [
                          "object"
                        ]
                      },
                      "booleanFlags": [],
                      "children": [],
                      "childTypes": [],
                      "line": 215,
                      "description": [
                        {
                          "contentType": "string",
                          "content": "Callback context",
                          "template": "js.flag.description"
                        }
                      ]
                    }
                  ]
                }
              ],
              "childTypes": [
                "param"
              ],
              "line": 215
            },
            {
              "isApiItem": true,
              "type": "method",
              "name": "removeAllListeners",
              "fullName": "class:ObservableEvent.removeAllListeners",
              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/ObservableEvent.js",
              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/ObservableEvent.js",
              "fileType": "js",
              "template": "js.item.method",
              "level": 2,
              "flags": {},
              "plainFlags": {},
              "booleanFlags": [],
              "children": [],
              "childTypes": [],
              "line": 253
            },
            {
              "isApiItem": true,
              "type": "method",
              "name": "suspend",
              "fullName": "class:ObservableEvent.suspend",
              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/ObservableEvent.js",
              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/ObservableEvent.js",
              "fileType": "js",
              "template": "js.item.method",
              "level": 2,
              "flags": {},
              "plainFlags": {},
              "booleanFlags": [],
              "children": [],
              "childTypes": [],
              "line": 269
            },
            {
              "isApiItem": true,
              "type": "method",
              "name": "resume",
              "fullName": "class:ObservableEvent.resume",
              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/ObservableEvent.js",
              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/ObservableEvent.js",
              "fileType": "js",
              "template": "js.item.method",
              "level": 2,
              "flags": {},
              "plainFlags": {},
              "booleanFlags": [],
              "children": [],
              "childTypes": [],
              "line": 276
            },
            {
              "isApiItem": true,
              "type": "method",
              "name": "trigger",
              "fullName": "class:ObservableEvent.trigger",
              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/ObservableEvent.js",
              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/ObservableEvent.js",
              "fileType": "js",
              "template": "js.item.method",
              "level": 2,
              "flags": {
                "returns": [
                  {
                    "contentType": "string",
                    "content": "*",
                    "template": "js.flag.returns"
                  }
                ]
              },
              "plainFlags": {
                "returns": [
                  "*"
                ]
              },
              "booleanFlags": [],
              "children": [],
              "childTypes": [],
              "line": 304
            }
          ]
        }
      ],
      "childTypes": [
        "method"
      ],
      "line": 18,
      "description": [
        {
          "contentType": "string",
          "content": "This class is private - you can't create an event other than via Observable.\nSee [class:Observable](#class:Observable) reference.",
          "template": "js.flag.description"
        }
      ]
    },
    {
      "isApiItem": true,
      "type": "class",
      "name": "Observable",
      "fullName": "class:Observable",
      "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
      "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
      "fileType": "js",
      "template": "js.item.class",
      "level": 1,
      "flags": {
        "version": [
          {
            "contentType": "string",
            "content": "1.2",
            "template": "js.flag.version"
          }
        ],
        "author": [
          {
            "contentType": "string",
            "content": "Ivan Kuindzhi",
            "template": "js.flag.author"
          }
        ],
        "link": [
          {
            "contentType": "string",
            "content": "https://github.com/kuindji/metaphorjs-observable",
            "template": "js.flag.link"
          }
        ]
      },
      "plainFlags": {
        "version": [
          "1.2"
        ],
        "author": [
          "Ivan Kuindzhi"
        ],
        "link": [
          "https://github.com/kuindji/metaphorjs-observable"
        ]
      },
      "booleanFlags": [],
      "children": [
        {
          "isApiGroup": true,
          "type": "method",
          "name": "Method",
          "groupName": "Methods",
          "items": [
            {
              "isApiItem": true,
              "type": "method",
              "name": "createEvent",
              "fullName": "class:Observable.createEvent",
              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
              "fileType": "js",
              "template": "js.item.method",
              "level": 2,
              "flags": {
                "returns": [
                  {
                    "contentType": "typeRef",
                    "content": "ObservableEvent",
                    "template": "js.flag.returns",
                    "ref": "class:ObservableEvent"
                  }
                ],
                "access": [
                  {
                    "contentType": "string",
                    "content": "public",
                    "template": "js.flag.access"
                  }
                ]
              },
              "plainFlags": {
                "returns": [
                  "ObservableEvent"
                ],
                "access": [
                  "public"
                ]
              },
              "booleanFlags": [],
              "children": [
                {
                  "isApiGroup": true,
                  "type": "param",
                  "items": [
                    {
                      "isApiItem": true,
                      "type": "param",
                      "name": "name",
                      "fullName": "class:Observable.createEvent/name",
                      "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "fileType": "js",
                      "template": "js.item.param",
                      "level": 3,
                      "flags": {
                        "type": [
                          {
                            "contentType": "string",
                            "content": "string",
                            "template": "js.flag.type"
                          }
                        ]
                      },
                      "plainFlags": {
                        "type": [
                          "string"
                        ]
                      },
                      "booleanFlags": [
                        "required"
                      ],
                      "children": [],
                      "childTypes": [],
                      "line": 69,
                      "description": [
                        {
                          "contentType": "string",
                          "content": "Event name",
                          "template": "js.flag.description"
                        }
                      ]
                    },
                    {
                      "isApiItem": true,
                      "type": "param",
                      "name": "returnResult",
                      "fullName": "class:Observable.createEvent/returnResult",
                      "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "fileType": "js",
                      "template": "js.item.param",
                      "level": 3,
                      "flags": {
                        "type": [
                          {
                            "contentType": "string",
                            "content": "boolean",
                            "template": "js.flag.type"
                          },
                          {
                            "contentType": "string",
                            "content": "string",
                            "template": "js.flag.type"
                          }
                        ]
                      },
                      "plainFlags": {
                        "type": [
                          "boolean",
                          "string"
                        ]
                      },
                      "booleanFlags": [],
                      "children": [],
                      "childTypes": [],
                      "line": 69,
                      "description": [
                        {
                          "contentType": "string",
                          "content": "false -- return first 'false' result and stop calling listeners after that<br>\n\"all\" -- return all results as array<br>\n\"merge\" -- merge all results into one array (each result must be array)<br>\n\"first\" -- return result of the first handler (next listener will not be called)<br>\n\"nonempty\" -- return first nonempty result<br>\n\"last\" -- return result of the last handler (all listeners will be called)<br>",
                          "template": "js.flag.description"
                        }
                      ]
                    },
                    {
                      "isApiItem": true,
                      "type": "param",
                      "name": "autoTrigger",
                      "fullName": "class:Observable.createEvent/autoTrigger",
                      "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "fileType": "js",
                      "template": "js.item.param",
                      "level": 3,
                      "flags": {
                        "type": [
                          {
                            "contentType": "string",
                            "content": "boolean",
                            "template": "js.flag.type"
                          }
                        ]
                      },
                      "plainFlags": {
                        "type": [
                          "boolean"
                        ]
                      },
                      "booleanFlags": [],
                      "children": [],
                      "childTypes": [],
                      "line": 69,
                      "description": [
                        {
                          "contentType": "string",
                          "content": "once triggered, all future subscribers will be automatically called\nwith last trigger params",
                          "template": "js.flag.description"
                        },
                        {
                          "contentType": "code",
                          "content": "var o = new Observable;\no.createEvent(\"auto\", null, true);\n// trigger first\no.trigger(\"auto\", 1, 2);\n// subscribe later\no.on(\"auto\", function(a, b){\n    console.log(a, b); // immediately logs 1, 2\n});",
                          "template": "js.flag.description",
                          "fromFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/examples/autoTrigger.js",
                          "fileType": "js"
                        }
                      ]
                    },
                    {
                      "isApiItem": true,
                      "type": "param",
                      "name": "triggerFilter",
                      "fullName": "class:Observable.createEvent/triggerFilter",
                      "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "fileType": "js",
                      "template": "js.item.param",
                      "level": 3,
                      "flags": {
                        "type": [
                          {
                            "contentType": "string",
                            "content": "function",
                            "template": "js.flag.type"
                          }
                        ],
                        "returns": [
                          {
                            "contentType": "string",
                            "content": "boolean",
                            "template": "js.flag.returns"
                          }
                        ]
                      },
                      "plainFlags": {
                        "type": [
                          "function"
                        ],
                        "returns": [
                          "boolean"
                        ]
                      },
                      "booleanFlags": [],
                      "children": [
                        {
                          "isApiGroup": true,
                          "type": "param",
                          "items": [
                            {
                              "isApiItem": true,
                              "type": "param",
                              "name": "listener",
                              "fullName": "class:Observable.createEvent/triggerFilter/listener",
                              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                              "fileType": "js",
                              "template": "js.item.param",
                              "level": 4,
                              "flags": {
                                "type": [
                                  {
                                    "contentType": "string",
                                    "content": "object",
                                    "template": "js.flag.type"
                                  }
                                ]
                              },
                              "plainFlags": {
                                "type": [
                                  "object"
                                ]
                              },
                              "booleanFlags": [],
                              "children": [],
                              "childTypes": [],
                              "description": [
                                {
                                  "contentType": "string",
                                  "content": "This object contains all information about the listener, including\n    all data you provided in options while subscribing to the event.",
                                  "template": "js.flag.description"
                                }
                              ]
                            },
                            {
                              "isApiItem": true,
                              "type": "param",
                              "name": "arguments",
                              "fullName": "class:Observable.createEvent/triggerFilter/arguments",
                              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                              "fileType": "js",
                              "template": "js.item.param",
                              "level": 4,
                              "flags": {
                                "type": [
                                  {
                                    "contentType": "string",
                                    "content": "array",
                                    "template": "js.flag.type"
                                  }
                                ]
                              },
                              "plainFlags": {
                                "type": [
                                  "array"
                                ]
                              },
                              "booleanFlags": [],
                              "children": [],
                              "childTypes": []
                            }
                          ]
                        }
                      ],
                      "childTypes": [
                        "param"
                      ],
                      "line": 69,
                      "description": [
                        {
                          "contentType": "string",
                          "content": "This function will be called each time event is triggered. Return false to skip listener.",
                          "template": "js.flag.description"
                        },
                        {
                          "contentType": "code",
                          "content": "var o = new Observable;\no.createEvent(\"filtered\", null, false, function(l, args){\n    if (l.always) {\n        return true;\n    }\n    if (l.param == args[0]) {\n        return true;\n    }\n    return false;\n});\n\no.on(\"filtered\", function(){\n    console.log(\"always\")\n}, null, {\n    always: true\n});\n\no.on(\"filtered\", function(){\n    console.log(\"param\");\n}, null, {\n    param: 1\n});\n\n\no.trigger(\"filtered\", 2); // \"always\"\no.trigger(\"filtered\", 1); // \"always\", \"param\"",
                          "template": "js.flag.description",
                          "fromFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/examples/triggerFilter.js",
                          "fileType": "js"
                        }
                      ]
                    },
                    {
                      "isApiItem": true,
                      "type": "param",
                      "name": "filterContext",
                      "fullName": "class:Observable.createEvent/filterContext",
                      "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "fileType": "js",
                      "template": "js.item.param",
                      "level": 3,
                      "flags": {
                        "type": [
                          {
                            "contentType": "string",
                            "content": "object",
                            "template": "js.flag.type"
                          }
                        ]
                      },
                      "plainFlags": {
                        "type": [
                          "object"
                        ]
                      },
                      "booleanFlags": [],
                      "children": [],
                      "childTypes": [],
                      "line": 69,
                      "description": [
                        {
                          "contentType": "string",
                          "content": "triggerFilter's context",
                          "template": "js.flag.description"
                        }
                      ]
                    }
                  ]
                }
              ],
              "childTypes": [
                "param"
              ],
              "line": 69,
              "description": [
                {
                  "contentType": "string",
                  "content": "You don't have to call this function unless you want to pass params other than event name.\nNormally, events are created automatically.",
                  "template": "js.flag.description"
                }
              ]
            },
            {
              "isApiItem": true,
              "type": "method",
              "name": "createEvent",
              "fullName": "class:Observable.createEvent",
              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
              "fileType": "js",
              "template": "js.item.method",
              "level": 2,
              "flags": {
                "returns": [
                  {
                    "contentType": "typeRef",
                    "content": "ObservableEvent",
                    "template": "js.flag.returns",
                    "ref": "class:ObservableEvent"
                  }
                ]
              },
              "plainFlags": {
                "returns": [
                  "ObservableEvent"
                ]
              },
              "booleanFlags": [],
              "children": [
                {
                  "isApiGroup": true,
                  "type": "param",
                  "items": [
                    {
                      "isApiItem": true,
                      "type": "param",
                      "name": "name",
                      "fullName": "class:Observable.createEvent/name",
                      "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "fileType": "js",
                      "template": "js.item.param",
                      "level": 3,
                      "flags": {
                        "type": [
                          {
                            "contentType": "string",
                            "content": "string",
                            "template": "js.flag.type"
                          }
                        ]
                      },
                      "plainFlags": {
                        "type": [
                          "string"
                        ]
                      },
                      "booleanFlags": [],
                      "children": [],
                      "childTypes": [],
                      "line": 81
                    },
                    {
                      "isApiItem": true,
                      "type": "param",
                      "name": "options",
                      "fullName": "class:Observable.createEvent/options",
                      "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "fileType": "js",
                      "template": "js.item.param",
                      "level": 3,
                      "flags": {
                        "type": [
                          {
                            "contentType": "string",
                            "content": "object",
                            "template": "js.flag.type"
                          }
                        ]
                      },
                      "plainFlags": {
                        "type": [
                          "object"
                        ]
                      },
                      "booleanFlags": [],
                      "children": [
                        {
                          "isApiGroup": true,
                          "type": "property",
                          "name": "Property",
                          "groupName": "Properties",
                          "items": [
                            {
                              "isApiItem": true,
                              "type": "property",
                              "name": "returnResult",
                              "fullName": "class:Observable.createEvent/options.returnResult",
                              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                              "fileType": "js",
                              "template": "js.item.property",
                              "level": 4,
                              "flags": {
                                "type": [
                                  {
                                    "contentType": "string",
                                    "content": "string",
                                    "template": "js.flag.type"
                                  }
                                ]
                              },
                              "plainFlags": {
                                "type": [
                                  "string"
                                ]
                              },
                              "booleanFlags": [],
                              "children": [],
                              "childTypes": []
                            },
                            {
                              "isApiItem": true,
                              "type": "property",
                              "name": "autoTrigger",
                              "fullName": "class:Observable.createEvent/options.autoTrigger",
                              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                              "fileType": "js",
                              "template": "js.item.property",
                              "level": 4,
                              "flags": {
                                "type": [
                                  {
                                    "contentType": "string",
                                    "content": "boolean",
                                    "template": "js.flag.type"
                                  }
                                ]
                              },
                              "plainFlags": {
                                "type": [
                                  "boolean"
                                ]
                              },
                              "booleanFlags": [],
                              "children": [],
                              "childTypes": []
                            },
                            {
                              "isApiItem": true,
                              "type": "property",
                              "name": "triggerFilter",
                              "fullName": "class:Observable.createEvent/options.triggerFilter",
                              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                              "fileType": "js",
                              "template": "js.item.property",
                              "level": 4,
                              "flags": {
                                "type": [
                                  {
                                    "contentType": "string",
                                    "content": "function",
                                    "template": "js.flag.type"
                                  }
                                ]
                              },
                              "plainFlags": {
                                "type": [
                                  "function"
                                ]
                              },
                              "booleanFlags": [],
                              "children": [],
                              "childTypes": []
                            },
                            {
                              "isApiItem": true,
                              "type": "property",
                              "name": "filterContext",
                              "fullName": "class:Observable.createEvent/options.filterContext",
                              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                              "fileType": "js",
                              "template": "js.item.property",
                              "level": 4,
                              "flags": {
                                "type": [
                                  {
                                    "contentType": "string",
                                    "content": "object",
                                    "template": "js.flag.type"
                                  }
                                ]
                              },
                              "plainFlags": {
                                "type": [
                                  "object"
                                ]
                              },
                              "booleanFlags": [],
                              "children": [],
                              "childTypes": []
                            }
                          ]
                        }
                      ],
                      "childTypes": [
                        "property"
                      ],
                      "line": 81
                    }
                  ]
                }
              ],
              "childTypes": [
                "param"
              ],
              "line": 81
            },
            {
              "isApiItem": true,
              "type": "method",
              "name": "getEvent",
              "fullName": "class:Observable.getEvent",
              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
              "fileType": "js",
              "template": "js.item.method",
              "level": 2,
              "flags": {
                "returns": [
                  {
                    "contentType": "typeRef",
                    "content": "ObservableEvent",
                    "template": "js.flag.returns",
                    "ref": "class:ObservableEvent"
                  },
                  {
                    "contentType": "string",
                    "content": "undefined",
                    "template": "js.flag.returns"
                  }
                ],
                "access": [
                  {
                    "contentType": "string",
                    "content": "public",
                    "template": "js.flag.access"
                  }
                ]
              },
              "plainFlags": {
                "returns": [
                  "ObservableEvent",
                  "undefined"
                ],
                "access": [
                  "public"
                ]
              },
              "booleanFlags": [],
              "children": [
                {
                  "isApiGroup": true,
                  "type": "param",
                  "items": [
                    {
                      "isApiItem": true,
                      "type": "param",
                      "name": "name",
                      "fullName": "class:Observable.getEvent/name",
                      "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "fileType": "js",
                      "template": "js.item.param",
                      "level": 3,
                      "flags": {
                        "type": [
                          {
                            "contentType": "string",
                            "content": "string",
                            "template": "js.flag.type"
                          }
                        ]
                      },
                      "plainFlags": {
                        "type": [
                          "string"
                        ]
                      },
                      "booleanFlags": [],
                      "children": [],
                      "childTypes": [],
                      "line": 96,
                      "description": [
                        {
                          "contentType": "string",
                          "content": "Event name",
                          "template": "js.flag.description"
                        }
                      ]
                    }
                  ]
                }
              ],
              "childTypes": [
                "param"
              ],
              "line": 96
            },
            {
              "isApiItem": true,
              "type": "method",
              "name": "on",
              "fullName": "class:Observable.on",
              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
              "fileType": "js",
              "template": "js.item.method",
              "level": 2,
              "flags": {
                "access": [
                  {
                    "contentType": "string",
                    "content": "public",
                    "template": "js.flag.access"
                  }
                ]
              },
              "plainFlags": {
                "access": [
                  "public"
                ]
              },
              "booleanFlags": [],
              "children": [
                {
                  "isApiGroup": true,
                  "type": "param",
                  "items": [
                    {
                      "isApiItem": true,
                      "type": "param",
                      "name": "name",
                      "fullName": "class:Observable.on/name",
                      "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "fileType": "js",
                      "template": "js.item.param",
                      "level": 3,
                      "flags": {
                        "type": [
                          {
                            "contentType": "string",
                            "content": "string",
                            "template": "js.flag.type"
                          }
                        ]
                      },
                      "plainFlags": {
                        "type": [
                          "string"
                        ]
                      },
                      "booleanFlags": [
                        "required"
                      ],
                      "children": [],
                      "childTypes": [],
                      "line": 135,
                      "description": [
                        {
                          "contentType": "string",
                          "content": "Event name",
                          "template": "js.flag.description"
                        }
                      ]
                    },
                    {
                      "isApiItem": true,
                      "type": "param",
                      "name": "fn",
                      "fullName": "class:Observable.on/fn",
                      "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "fileType": "js",
                      "template": "js.item.param",
                      "level": 3,
                      "flags": {
                        "type": [
                          {
                            "contentType": "string",
                            "content": "function",
                            "template": "js.flag.type"
                          }
                        ]
                      },
                      "plainFlags": {
                        "type": [
                          "function"
                        ]
                      },
                      "booleanFlags": [
                        "required"
                      ],
                      "children": [],
                      "childTypes": [],
                      "line": 135,
                      "description": [
                        {
                          "contentType": "string",
                          "content": "Callback function",
                          "template": "js.flag.description"
                        }
                      ]
                    },
                    {
                      "isApiItem": true,
                      "type": "param",
                      "name": "context",
                      "fullName": "class:Observable.on/context",
                      "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "fileType": "js",
                      "template": "js.item.param",
                      "level": 3,
                      "flags": {
                        "type": [
                          {
                            "contentType": "string",
                            "content": "object",
                            "template": "js.flag.type"
                          }
                        ]
                      },
                      "plainFlags": {
                        "type": [
                          "object"
                        ]
                      },
                      "booleanFlags": [],
                      "children": [],
                      "childTypes": [],
                      "line": 135,
                      "description": [
                        {
                          "contentType": "string",
                          "content": "\"this\" object for the callback function",
                          "template": "js.flag.description"
                        }
                      ]
                    },
                    {
                      "isApiItem": true,
                      "type": "param",
                      "name": "options",
                      "fullName": "class:Observable.on/options",
                      "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "fileType": "js",
                      "template": "js.item.param",
                      "level": 3,
                      "flags": {
                        "type": [
                          {
                            "contentType": "string",
                            "content": "object",
                            "template": "js.flag.type"
                          }
                        ]
                      },
                      "plainFlags": {
                        "type": [
                          "object"
                        ]
                      },
                      "booleanFlags": [],
                      "children": [
                        {
                          "isApiGroup": true,
                          "type": "property",
                          "name": "Property",
                          "groupName": "Properties",
                          "items": [
                            {
                              "isApiItem": true,
                              "type": "property",
                              "name": "first",
                              "fullName": "class:Observable.on/options.first",
                              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                              "fileType": "js",
                              "template": "js.item.property",
                              "level": 4,
                              "flags": {
                                "type": [
                                  {
                                    "contentType": "string",
                                    "content": "boolean",
                                    "template": "js.flag.type"
                                  }
                                ],
                                "default": [
                                  {
                                    "contentType": "string",
                                    "content": "false",
                                    "template": "js.flag.default"
                                  }
                                ]
                              },
                              "plainFlags": {
                                "type": [
                                  "boolean"
                                ],
                                "default": [
                                  "false"
                                ]
                              },
                              "booleanFlags": [],
                              "children": [],
                              "childTypes": [],
                              "description": [
                                {
                                  "contentType": "string",
                                  "content": "True to prepend to the list of handlers",
                                  "template": "js.flag.description"
                                }
                              ]
                            },
                            {
                              "isApiItem": true,
                              "type": "property",
                              "name": "limit",
                              "fullName": "class:Observable.on/options.limit",
                              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                              "fileType": "js",
                              "template": "js.item.property",
                              "level": 4,
                              "flags": {
                                "type": [
                                  {
                                    "contentType": "string",
                                    "content": "number",
                                    "template": "js.flag.type"
                                  }
                                ],
                                "default": [
                                  {
                                    "contentType": "string",
                                    "content": "0",
                                    "template": "js.flag.default"
                                  }
                                ]
                              },
                              "plainFlags": {
                                "type": [
                                  "number"
                                ],
                                "default": [
                                  "0"
                                ]
                              },
                              "booleanFlags": [],
                              "children": [],
                              "childTypes": [],
                              "description": [
                                {
                                  "contentType": "string",
                                  "content": "Call handler this number of times; 0 for unlimited",
                                  "template": "js.flag.description"
                                }
                              ]
                            },
                            {
                              "isApiItem": true,
                              "type": "property",
                              "name": "start",
                              "fullName": "class:Observable.on/options.start",
                              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                              "fileType": "js",
                              "template": "js.item.property",
                              "level": 4,
                              "flags": {
                                "type": [
                                  {
                                    "contentType": "string",
                                    "content": "number",
                                    "template": "js.flag.type"
                                  }
                                ],
                                "default": [
                                  {
                                    "contentType": "string",
                                    "content": "1",
                                    "template": "js.flag.default"
                                  }
                                ]
                              },
                              "plainFlags": {
                                "type": [
                                  "number"
                                ],
                                "default": [
                                  "1"
                                ]
                              },
                              "booleanFlags": [],
                              "children": [],
                              "childTypes": [],
                              "description": [
                                {
                                  "contentType": "string",
                                  "content": "Start calling handler after this number of calls. Starts from 1",
                                  "template": "js.flag.description"
                                }
                              ]
                            },
                            {
                              "isApiItem": true,
                              "type": "property",
                              "name": "append",
                              "fullName": "class:Observable.on/options.append",
                              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                              "fileType": "js",
                              "template": "js.item.property",
                              "level": 4,
                              "flags": {
                                "type": [
                                  {
                                    "contentType": "string",
                                    "content": "array",
                                    "template": "js.flag.type"
                                  }
                                ]
                              },
                              "plainFlags": {
                                "type": [
                                  "array"
                                ]
                              },
                              "booleanFlags": [],
                              "children": [],
                              "childTypes": [],
                              "description": [
                                {
                                  "contentType": "string",
                                  "content": "Append parameters",
                                  "template": "js.flag.description"
                                }
                              ]
                            },
                            {
                              "isApiItem": true,
                              "type": "property",
                              "name": "prepend",
                              "fullName": "class:Observable.on/options.prepend",
                              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                              "fileType": "js",
                              "template": "js.item.property",
                              "level": 4,
                              "flags": {
                                "type": [
                                  {
                                    "contentType": "string",
                                    "content": "array",
                                    "template": "js.flag.type"
                                  }
                                ]
                              },
                              "plainFlags": {
                                "type": [
                                  "array"
                                ]
                              },
                              "booleanFlags": [],
                              "children": [],
                              "childTypes": [],
                              "description": [
                                {
                                  "contentType": "string",
                                  "content": "Prepend parameters",
                                  "template": "js.flag.description"
                                }
                              ]
                            },
                            {
                              "isApiItem": true,
                              "type": "property",
                              "name": "allowDupes",
                              "fullName": "class:Observable.on/options.allowDupes",
                              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                              "fileType": "js",
                              "template": "js.item.property",
                              "level": 4,
                              "flags": {
                                "type": [
                                  {
                                    "contentType": "string",
                                    "content": "boolean",
                                    "template": "js.flag.type"
                                  }
                                ]
                              },
                              "plainFlags": {
                                "type": [
                                  "boolean"
                                ]
                              },
                              "booleanFlags": [],
                              "children": [],
                              "childTypes": [],
                              "description": [
                                {
                                  "contentType": "string",
                                  "content": "allow the same handler twice",
                                  "template": "js.flag.description"
                                }
                              ]
                            },
                            {
                              "isApiItem": true,
                              "type": "property",
                              "name": "async",
                              "fullName": "class:Observable.on/options.async",
                              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                              "fileType": "js",
                              "template": "js.item.property",
                              "level": 4,
                              "flags": {
                                "type": [
                                  {
                                    "contentType": "string",
                                    "content": "boolean",
                                    "template": "js.flag.type"
                                  }
                                ]
                              },
                              "plainFlags": {
                                "type": [
                                  "boolean"
                                ]
                              },
                              "booleanFlags": [],
                              "children": [],
                              "childTypes": [],
                              "description": [
                                {
                                  "contentType": "string",
                                  "content": "run event asynchronously",
                                  "template": "js.flag.description"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "childTypes": [
                        "property"
                      ],
                      "line": 135,
                      "description": [
                        {
                          "contentType": "string",
                          "content": " You can pass any key-value pairs in this object. All of them will be passed to triggerFilter (if\n you're using one).",
                          "template": "js.flag.description"
                        }
                      ]
                    }
                  ]
                }
              ],
              "childTypes": [
                "param"
              ],
              "line": 135,
              "description": [
                {
                  "contentType": "string",
                  "content": "Subscribe to an event or register collector function.",
                  "template": "js.flag.description"
                }
              ]
            },
            {
              "isApiItem": true,
              "type": "method",
              "name": "once",
              "fullName": "class:Observable.once",
              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
              "fileType": "js",
              "template": "js.item.method",
              "level": 2,
              "flags": {
                "access": [
                  {
                    "contentType": "string",
                    "content": "public",
                    "template": "js.flag.access"
                  }
                ]
              },
              "plainFlags": {
                "access": [
                  "public"
                ]
              },
              "booleanFlags": [],
              "children": [],
              "childTypes": [],
              "line": 149,
              "description": [
                {
                  "contentType": "string",
                  "content": "Same as [class:Observable.on](#class:Observable.on), but options.limit is forcefully set to 1.",
                  "template": "js.flag.description"
                }
              ]
            },
            {
              "isApiItem": true,
              "type": "method",
              "name": "un",
              "fullName": "class:Observable.un",
              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
              "fileType": "js",
              "template": "js.item.method",
              "level": 2,
              "flags": {
                "access": [
                  {
                    "contentType": "string",
                    "content": "public",
                    "template": "js.flag.access"
                  }
                ]
              },
              "plainFlags": {
                "access": [
                  "public"
                ]
              },
              "booleanFlags": [],
              "children": [
                {
                  "isApiGroup": true,
                  "type": "param",
                  "items": [
                    {
                      "isApiItem": true,
                      "type": "param",
                      "name": "name",
                      "fullName": "class:Observable.un/name",
                      "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "fileType": "js",
                      "template": "js.item.param",
                      "level": 3,
                      "flags": {
                        "type": [
                          {
                            "contentType": "string",
                            "content": "string",
                            "template": "js.flag.type"
                          }
                        ]
                      },
                      "plainFlags": {
                        "type": [
                          "string"
                        ]
                      },
                      "booleanFlags": [],
                      "children": [],
                      "childTypes": [],
                      "line": 164,
                      "description": [
                        {
                          "contentType": "string",
                          "content": "Event name",
                          "template": "js.flag.description"
                        }
                      ]
                    },
                    {
                      "isApiItem": true,
                      "type": "param",
                      "name": "fn",
                      "fullName": "class:Observable.un/fn",
                      "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "fileType": "js",
                      "template": "js.item.param",
                      "level": 3,
                      "flags": {
                        "type": [
                          {
                            "contentType": "string",
                            "content": "function",
                            "template": "js.flag.type"
                          }
                        ]
                      },
                      "plainFlags": {
                        "type": [
                          "function"
                        ]
                      },
                      "booleanFlags": [],
                      "children": [],
                      "childTypes": [],
                      "line": 164,
                      "description": [
                        {
                          "contentType": "string",
                          "content": "Event handler",
                          "template": "js.flag.description"
                        }
                      ]
                    },
                    {
                      "isApiItem": true,
                      "type": "param",
                      "name": "context",
                      "fullName": "class:Observable.un/context",
                      "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "fileType": "js",
                      "template": "js.item.param",
                      "level": 3,
                      "flags": {
                        "type": [
                          {
                            "contentType": "string",
                            "content": "object",
                            "template": "js.flag.type"
                          }
                        ]
                      },
                      "plainFlags": {
                        "type": [
                          "object"
                        ]
                      },
                      "booleanFlags": [],
                      "children": [],
                      "childTypes": [],
                      "line": 164,
                      "description": [
                        {
                          "contentType": "string",
                          "content": "If you called on() with context you must call un() with the same context",
                          "template": "js.flag.description"
                        }
                      ]
                    }
                  ]
                }
              ],
              "childTypes": [
                "param"
              ],
              "line": 164,
              "description": [
                {
                  "contentType": "string",
                  "content": "Unsubscribe from an event",
                  "template": "js.flag.description"
                }
              ]
            },
            {
              "isApiItem": true,
              "type": "method",
              "name": "hasListener",
              "fullName": "class:Observable.hasListener",
              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
              "fileType": "js",
              "template": "js.item.method",
              "level": 2,
              "flags": {
                "returns": [
                  {
                    "contentType": "string",
                    "content": "boolean",
                    "template": "js.flag.returns"
                  }
                ],
                "access": [
                  {
                    "contentType": "string",
                    "content": "public",
                    "template": "js.flag.access"
                  }
                ]
              },
              "plainFlags": {
                "returns": [
                  "boolean"
                ],
                "access": [
                  "public"
                ]
              },
              "booleanFlags": [],
              "children": [],
              "childTypes": [],
              "line": 178
            },
            {
              "isApiItem": true,
              "type": "method",
              "name": "hasListener",
              "fullName": "class:Observable.hasListener",
              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
              "fileType": "js",
              "template": "js.item.method",
              "level": 2,
              "flags": {
                "returns": [
                  {
                    "contentType": "string",
                    "content": "boolean",
                    "template": "js.flag.returns"
                  }
                ],
                "access": [
                  {
                    "contentType": "string",
                    "content": "public",
                    "template": "js.flag.access"
                  }
                ]
              },
              "plainFlags": {
                "returns": [
                  "boolean"
                ],
                "access": [
                  "public"
                ]
              },
              "booleanFlags": [],
              "children": [
                {
                  "isApiGroup": true,
                  "type": "param",
                  "items": [
                    {
                      "isApiItem": true,
                      "type": "param",
                      "name": "name",
                      "fullName": "class:Observable.hasListener/name",
                      "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "fileType": "js",
                      "template": "js.item.param",
                      "level": 3,
                      "flags": {
                        "type": [
                          {
                            "contentType": "string",
                            "content": "string",
                            "template": "js.flag.type"
                          }
                        ]
                      },
                      "plainFlags": {
                        "type": [
                          "string"
                        ]
                      },
                      "booleanFlags": [
                        "required"
                      ],
                      "children": [],
                      "childTypes": [],
                      "line": 185,
                      "description": [
                        {
                          "contentType": "string",
                          "content": "Event name",
                          "template": "js.flag.description"
                        }
                      ]
                    }
                  ]
                }
              ],
              "childTypes": [
                "param"
              ],
              "line": 185
            },
            {
              "isApiItem": true,
              "type": "method",
              "name": "hasListener",
              "fullName": "class:Observable.hasListener",
              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
              "fileType": "js",
              "template": "js.item.method",
              "level": 2,
              "flags": {
                "returns": [
                  {
                    "contentType": "string",
                    "content": "boolean",
                    "template": "js.flag.returns"
                  }
                ],
                "access": [
                  {
                    "contentType": "string",
                    "content": "public",
                    "template": "js.flag.access"
                  }
                ]
              },
              "plainFlags": {
                "returns": [
                  "boolean"
                ],
                "access": [
                  "public"
                ]
              },
              "booleanFlags": [],
              "children": [
                {
                  "isApiGroup": true,
                  "type": "param",
                  "items": [
                    {
                      "isApiItem": true,
                      "type": "param",
                      "name": "name",
                      "fullName": "class:Observable.hasListener/name",
                      "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "fileType": "js",
                      "template": "js.item.param",
                      "level": 3,
                      "flags": {
                        "type": [
                          {
                            "contentType": "string",
                            "content": "string",
                            "template": "js.flag.type"
                          }
                        ]
                      },
                      "plainFlags": {
                        "type": [
                          "string"
                        ]
                      },
                      "booleanFlags": [
                        "required"
                      ],
                      "children": [],
                      "childTypes": [],
                      "line": 194,
                      "description": [
                        {
                          "contentType": "string",
                          "content": "Event name",
                          "template": "js.flag.description"
                        }
                      ]
                    },
                    {
                      "isApiItem": true,
                      "type": "param",
                      "name": "fn",
                      "fullName": "class:Observable.hasListener/fn",
                      "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "fileType": "js",
                      "template": "js.item.param",
                      "level": 3,
                      "flags": {
                        "type": [
                          {
                            "contentType": "string",
                            "content": "function",
                            "template": "js.flag.type"
                          }
                        ]
                      },
                      "plainFlags": {
                        "type": [
                          "function"
                        ]
                      },
                      "booleanFlags": [
                        "required"
                      ],
                      "children": [],
                      "childTypes": [],
                      "line": 194,
                      "description": [
                        {
                          "contentType": "string",
                          "content": "Callback function",
                          "template": "js.flag.description"
                        }
                      ]
                    },
                    {
                      "isApiItem": true,
                      "type": "param",
                      "name": "context",
                      "fullName": "class:Observable.hasListener/context",
                      "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "fileType": "js",
                      "template": "js.item.param",
                      "level": 3,
                      "flags": {
                        "type": [
                          {
                            "contentType": "string",
                            "content": "object",
                            "template": "js.flag.type"
                          }
                        ]
                      },
                      "plainFlags": {
                        "type": [
                          "object"
                        ]
                      },
                      "booleanFlags": [],
                      "children": [],
                      "childTypes": [],
                      "line": 194,
                      "description": [
                        {
                          "contentType": "string",
                          "content": "Function's \"this\" object",
                          "template": "js.flag.description"
                        }
                      ]
                    }
                  ]
                }
              ],
              "childTypes": [
                "param"
              ],
              "line": 194
            },
            {
              "isApiItem": true,
              "type": "method",
              "name": "hasEvent",
              "fullName": "class:Observable.hasEvent",
              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
              "fileType": "js",
              "template": "js.item.method",
              "level": 2,
              "flags": {
                "returns": [
                  {
                    "contentType": "string",
                    "content": "boolean",
                    "template": "js.flag.returns"
                  }
                ],
                "access": [
                  {
                    "contentType": "string",
                    "content": "public",
                    "template": "js.flag.access"
                  }
                ]
              },
              "plainFlags": {
                "returns": [
                  "boolean"
                ],
                "access": [
                  "public"
                ]
              },
              "booleanFlags": [],
              "children": [
                {
                  "isApiGroup": true,
                  "type": "param",
                  "items": [
                    {
                      "isApiItem": true,
                      "type": "param",
                      "name": "name",
                      "fullName": "class:Observable.hasEvent/name",
                      "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "fileType": "js",
                      "template": "js.item.param",
                      "level": 3,
                      "flags": {
                        "type": [
                          {
                            "contentType": "string",
                            "content": "string",
                            "template": "js.flag.type"
                          }
                        ]
                      },
                      "plainFlags": {
                        "type": [
                          "string"
                        ]
                      },
                      "booleanFlags": [
                        "required"
                      ],
                      "children": [],
                      "childTypes": [],
                      "line": 220,
                      "description": [
                        {
                          "contentType": "string",
                          "content": "Event name",
                          "template": "js.flag.description"
                        }
                      ]
                    }
                  ]
                }
              ],
              "childTypes": [
                "param"
              ],
              "line": 220
            },
            {
              "isApiItem": true,
              "type": "method",
              "name": "removeAllListeners",
              "fullName": "class:Observable.removeAllListeners",
              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
              "fileType": "js",
              "template": "js.item.method",
              "level": 2,
              "flags": {
                "access": [
                  {
                    "contentType": "string",
                    "content": "public",
                    "template": "js.flag.access"
                  }
                ]
              },
              "plainFlags": {
                "access": [
                  "public"
                ]
              },
              "booleanFlags": [],
              "children": [],
              "childTypes": [],
              "line": 230,
              "description": [
                {
                  "contentType": "string",
                  "content": "Remove all listeners from all events",
                  "template": "js.flag.description"
                }
              ]
            },
            {
              "isApiItem": true,
              "type": "method",
              "name": "removeAllListeners",
              "fullName": "class:Observable.removeAllListeners",
              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
              "fileType": "js",
              "template": "js.item.method",
              "level": 2,
              "flags": {
                "access": [
                  {
                    "contentType": "string",
                    "content": "public",
                    "template": "js.flag.access"
                  }
                ]
              },
              "plainFlags": {
                "access": [
                  "public"
                ]
              },
              "booleanFlags": [],
              "children": [
                {
                  "isApiGroup": true,
                  "type": "param",
                  "items": [
                    {
                      "isApiItem": true,
                      "type": "param",
                      "name": "name",
                      "fullName": "class:Observable.removeAllListeners/name",
                      "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "fileType": "js",
                      "template": "js.item.param",
                      "level": 3,
                      "flags": {
                        "type": [
                          {
                            "contentType": "string",
                            "content": "string",
                            "template": "js.flag.type"
                          }
                        ]
                      },
                      "plainFlags": {
                        "type": [
                          "string"
                        ]
                      },
                      "booleanFlags": [
                        "required"
                      ],
                      "children": [],
                      "childTypes": [],
                      "line": 237,
                      "description": [
                        {
                          "contentType": "string",
                          "content": "Event name",
                          "template": "js.flag.description"
                        }
                      ]
                    }
                  ]
                }
              ],
              "childTypes": [
                "param"
              ],
              "line": 237,
              "description": [
                {
                  "contentType": "string",
                  "content": "Remove all listeners from specific event",
                  "template": "js.flag.description"
                }
              ]
            },
            {
              "isApiItem": true,
              "type": "method",
              "name": "trigger",
              "fullName": "class:Observable.trigger",
              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
              "fileType": "js",
              "template": "js.item.method",
              "level": 2,
              "flags": {
                "returns": [
                  {
                    "contentType": "string",
                    "content": "mixed",
                    "template": "js.flag.returns"
                  }
                ],
                "access": [
                  {
                    "contentType": "string",
                    "content": "public",
                    "template": "js.flag.access"
                  }
                ]
              },
              "plainFlags": {
                "returns": [
                  "mixed"
                ],
                "access": [
                  "public"
                ]
              },
              "booleanFlags": [],
              "children": [
                {
                  "isApiGroup": true,
                  "type": "param",
                  "items": [
                    {
                      "isApiItem": true,
                      "type": "param",
                      "name": "name",
                      "fullName": "class:Observable.trigger/name",
                      "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "fileType": "js",
                      "template": "js.item.param",
                      "level": 3,
                      "flags": {
                        "type": [
                          {
                            "contentType": "string",
                            "content": "string",
                            "template": "js.flag.type"
                          }
                        ]
                      },
                      "plainFlags": {
                        "type": [
                          "string"
                        ]
                      },
                      "booleanFlags": [
                        "required"
                      ],
                      "children": [],
                      "childTypes": [],
                      "line": 260,
                      "description": [
                        {
                          "contentType": "string",
                          "content": "Event name",
                          "template": "js.flag.description"
                        }
                      ]
                    },
                    {
                      "isApiItem": true,
                      "type": "param",
                      "name": "...",
                      "fullName": "class:Observable.trigger/...",
                      "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "fileType": "js",
                      "template": "js.item.param",
                      "level": 3,
                      "flags": {
                        "type": [
                          {
                            "contentType": "string",
                            "content": "*",
                            "template": "js.flag.type"
                          }
                        ]
                      },
                      "plainFlags": {
                        "type": [
                          "*"
                        ]
                      },
                      "booleanFlags": [],
                      "children": [],
                      "childTypes": [],
                      "line": 260,
                      "description": [
                        {
                          "contentType": "string",
                          "content": "As many other params as needed",
                          "template": "js.flag.description"
                        }
                      ]
                    }
                  ]
                }
              ],
              "childTypes": [
                "param"
              ],
              "line": 260,
              "description": [
                {
                  "contentType": "string",
                  "content": "Trigger an event -- call all listeners.",
                  "template": "js.flag.description"
                }
              ]
            },
            {
              "isApiItem": true,
              "type": "method",
              "name": "suspendEvent",
              "fullName": "class:Observable.suspendEvent",
              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
              "fileType": "js",
              "template": "js.item.method",
              "level": 2,
              "flags": {
                "access": [
                  {
                    "contentType": "string",
                    "content": "public",
                    "template": "js.flag.access"
                  }
                ]
              },
              "plainFlags": {
                "access": [
                  "public"
                ]
              },
              "booleanFlags": [],
              "children": [
                {
                  "isApiGroup": true,
                  "type": "param",
                  "items": [
                    {
                      "isApiItem": true,
                      "type": "param",
                      "name": "name",
                      "fullName": "class:Observable.suspendEvent/name",
                      "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "fileType": "js",
                      "template": "js.item.param",
                      "level": 3,
                      "flags": {
                        "type": [
                          {
                            "contentType": "string",
                            "content": "string",
                            "template": "js.flag.type"
                          }
                        ]
                      },
                      "plainFlags": {
                        "type": [
                          "string"
                        ]
                      },
                      "booleanFlags": [],
                      "children": [],
                      "childTypes": [],
                      "line": 281,
                      "description": [
                        {
                          "contentType": "string",
                          "content": "Event name",
                          "template": "js.flag.description"
                        }
                      ]
                    }
                  ]
                }
              ],
              "childTypes": [
                "param"
              ],
              "line": 281,
              "description": [
                {
                  "contentType": "string",
                  "content": "Suspend an event. Suspended event will not call any listeners on trigger().",
                  "template": "js.flag.description"
                }
              ]
            },
            {
              "isApiItem": true,
              "type": "method",
              "name": "suspendAllEvents",
              "fullName": "class:Observable.suspendAllEvents",
              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
              "fileType": "js",
              "template": "js.item.method",
              "level": 2,
              "flags": {
                "access": [
                  {
                    "contentType": "string",
                    "content": "public",
                    "template": "js.flag.access"
                  }
                ]
              },
              "plainFlags": {
                "access": [
                  "public"
                ]
              },
              "booleanFlags": [],
              "children": [],
              "childTypes": [],
              "line": 294
            },
            {
              "isApiItem": true,
              "type": "method",
              "name": "resumeEvent",
              "fullName": "class:Observable.resumeEvent",
              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
              "fileType": "js",
              "template": "js.item.method",
              "level": 2,
              "flags": {
                "access": [
                  {
                    "contentType": "string",
                    "content": "public",
                    "template": "js.flag.access"
                  }
                ]
              },
              "plainFlags": {
                "access": [
                  "public"
                ]
              },
              "booleanFlags": [],
              "children": [
                {
                  "isApiGroup": true,
                  "type": "param",
                  "items": [
                    {
                      "isApiItem": true,
                      "type": "param",
                      "name": "name",
                      "fullName": "class:Observable.resumeEvent/name",
                      "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "fileType": "js",
                      "template": "js.item.param",
                      "level": 3,
                      "flags": {
                        "type": [
                          {
                            "contentType": "string",
                            "content": "string",
                            "template": "js.flag.type"
                          }
                        ]
                      },
                      "plainFlags": {
                        "type": [
                          "string"
                        ]
                      },
                      "booleanFlags": [],
                      "children": [],
                      "childTypes": [],
                      "line": 307,
                      "description": [
                        {
                          "contentType": "string",
                          "content": "Event name",
                          "template": "js.flag.description"
                        }
                      ]
                    }
                  ]
                }
              ],
              "childTypes": [
                "param"
              ],
              "line": 307,
              "description": [
                {
                  "contentType": "string",
                  "content": "Resume suspended event.",
                  "template": "js.flag.description"
                }
              ]
            },
            {
              "isApiItem": true,
              "type": "method",
              "name": "resumeAllEvents",
              "fullName": "class:Observable.resumeAllEvents",
              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
              "fileType": "js",
              "template": "js.item.method",
              "level": 2,
              "flags": {
                "access": [
                  {
                    "contentType": "string",
                    "content": "public",
                    "template": "js.flag.access"
                  }
                ]
              },
              "plainFlags": {
                "access": [
                  "public"
                ]
              },
              "booleanFlags": [],
              "children": [],
              "childTypes": [],
              "line": 320
            },
            {
              "isApiItem": true,
              "type": "method",
              "name": "destroyEvent",
              "fullName": "class:Observable.destroyEvent",
              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
              "fileType": "js",
              "template": "js.item.method",
              "level": 2,
              "flags": {
                "access": [
                  {
                    "contentType": "string",
                    "content": "public",
                    "template": "js.flag.access"
                  }
                ]
              },
              "plainFlags": {
                "access": [
                  "public"
                ]
              },
              "booleanFlags": [],
              "children": [
                {
                  "isApiGroup": true,
                  "type": "param",
                  "items": [
                    {
                      "isApiItem": true,
                      "type": "param",
                      "name": "name",
                      "fullName": "class:Observable.destroyEvent/name",
                      "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
                      "fileType": "js",
                      "template": "js.item.param",
                      "level": 3,
                      "flags": {
                        "type": [
                          {
                            "contentType": "string",
                            "content": "string",
                            "template": "js.flag.type"
                          }
                        ]
                      },
                      "plainFlags": {
                        "type": [
                          "string"
                        ]
                      },
                      "booleanFlags": [],
                      "children": [],
                      "childTypes": [],
                      "line": 332,
                      "description": [
                        {
                          "contentType": "string",
                          "content": "Event name",
                          "template": "js.flag.description"
                        }
                      ]
                    }
                  ]
                }
              ],
              "childTypes": [
                "param"
              ],
              "line": 332
            },
            {
              "isApiItem": true,
              "type": "method",
              "name": "destroy",
              "fullName": "class:Observable.destroy",
              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
              "fileType": "js",
              "template": "js.item.method",
              "level": 2,
              "flags": {
                "access": [
                  {
                    "contentType": "string",
                    "content": "public",
                    "template": "js.flag.access"
                  }
                ]
              },
              "plainFlags": {
                "access": [
                  "public"
                ]
              },
              "booleanFlags": [],
              "children": [],
              "childTypes": [],
              "line": 348,
              "description": [
                {
                  "contentType": "string",
                  "content": "Destroy observable",
                  "template": "js.flag.description"
                }
              ]
            },
            {
              "isApiItem": true,
              "type": "method",
              "name": "getApi",
              "fullName": "class:Observable.getApi",
              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/lib/Observable.js",
              "fileType": "js",
              "template": "js.item.method",
              "level": 2,
              "flags": {
                "returns": [
                  {
                    "contentType": "string",
                    "content": "object",
                    "template": "js.flag.returns"
                  }
                ]
              },
              "plainFlags": {
                "returns": [
                  "object"
                ]
              },
              "booleanFlags": [],
              "children": [],
              "childTypes": [],
              "line": 369,
              "description": [
                {
                  "contentType": "string",
                  "content": "Although all methods are public there is getApi() method that allows you\nextending your own objects without overriding \"destroy\" (which you probably have)",
                  "template": "js.flag.description"
                },
                {
                  "contentType": "code",
                  "content": "var o = new Observable;\n$.extend(this, o.getApi());\nthis.on(\"event\", function(){ alert(\"ok\") });\nthis.trigger(\"event\");",
                  "template": "js.flag.description",
                  "fromFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/examples/api.js",
                  "fileType": "js"
                }
              ]
            }
          ]
        }
      ],
      "childTypes": [
        "method"
      ],
      "line": 24,
      "description": [
        {
          "contentType": "string",
          "content": "A javascript event system implementing two patterns - observable and collector.",
          "template": "js.flag.description"
        },
        {
          "contentType": "string",
          "content": "Observable:",
          "template": "js.flag.description"
        },
        {
          "contentType": "code",
          "content": "var o = new Observable;\no.on(\"event\", function(x, y, z){ console.log([x, y, z]) });\no.trigger(\"event\", 1, 2, 3); // [1, 2, 3]",
          "template": "js.flag.description",
          "fromFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/examples/observable.js",
          "fileType": "js"
        },
        {
          "contentType": "string",
          "content": "Collector:",
          "template": "js.flag.description"
        },
        {
          "contentType": "code",
          "content": "var o = new Observable;\no.createEvent(\"collectStuff\", \"all\");\no.on(\"collectStuff\", function(){ return 1; });\no.on(\"collectStuff\", function(){ return 2; });\nvar results = o.trigger(\"collectStuff\"); // [1, 2]",
          "template": "js.flag.description",
          "fromFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/examples/collector.js",
          "fileType": "js"
        }
      ]
    },
    {
      "isApiItem": true,
      "type": "mixin",
      "name": "Observable",
      "fullName": "mixin:Observable",
      "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/mixin/Observable.js",
      "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/mixin/Observable.js",
      "fileType": "js",
      "template": "js.item.mixin",
      "level": 1,
      "flags": {},
      "plainFlags": {},
      "booleanFlags": [],
      "children": [
        {
          "isApiGroup": true,
          "type": "property",
          "name": "Property",
          "groupName": "Properties",
          "items": [
            {
              "isApiItem": true,
              "type": "property",
              "name": "$$observable",
              "fullName": "mixin:Observable.$$observable",
              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/mixin/Observable.js",
              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/mixin/Observable.js",
              "fileType": "js",
              "template": "js.item.property",
              "level": 2,
              "flags": {
                "type": [
                  {
                    "contentType": "typeRef",
                    "content": "Observable",
                    "template": "js.flag.type",
                    "ref": "class:Observable"
                  }
                ],
                "access": [
                  {
                    "contentType": "string",
                    "content": "private",
                    "template": "js.flag.access"
                  }
                ]
              },
              "plainFlags": {
                "type": [
                  "Observable"
                ],
                "access": [
                  "private"
                ]
              },
              "booleanFlags": [],
              "children": [],
              "childTypes": [],
              "line": 20,
              "description": [
                {
                  "contentType": "string",
                  "content": "You can use this instance in your $init function",
                  "template": "js.flag.description"
                }
              ]
            },
            {
              "isApiItem": true,
              "type": "property",
              "name": "$$callbackContext",
              "fullName": "mixin:Observable.$$callbackContext",
              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/mixin/Observable.js",
              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/mixin/Observable.js",
              "fileType": "js",
              "template": "js.item.property",
              "level": 2,
              "flags": {
                "type": [
                  {
                    "contentType": "string",
                    "content": "object",
                    "template": "js.flag.type"
                  }
                ],
                "access": [
                  {
                    "contentType": "string",
                    "content": "private",
                    "template": "js.flag.access"
                  }
                ]
              },
              "plainFlags": {
                "type": [
                  "object"
                ],
                "access": [
                  "private"
                ]
              },
              "booleanFlags": [],
              "children": [],
              "childTypes": [],
              "line": 26
            },
            {
              "isApiItem": true,
              "type": "property",
              "name": "$$events",
              "fullName": "mixin:Observable.$$events",
              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/mixin/Observable.js",
              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/mixin/Observable.js",
              "fileType": "js",
              "template": "js.item.property",
              "level": 2,
              "flags": {
                "type": [
                  {
                    "contentType": "string",
                    "content": "object",
                    "template": "js.flag.type"
                  }
                ],
                "access": [
                  {
                    "contentType": "string",
                    "content": "protected",
                    "template": "js.flag.access"
                  }
                ]
              },
              "plainFlags": {
                "type": [
                  "object"
                ],
                "access": [
                  "protected"
                ]
              },
              "booleanFlags": [],
              "children": [],
              "childTypes": [],
              "line": 36,
              "description": [
                {
                  "contentType": "string",
                  "content": "Override this to define event properties.\nObject's key is event name, value - either returnResult or\noptions object. See [class:Observable.createEvent](#class:Observable.createEvent)",
                  "template": "js.flag.description"
                }
              ]
            }
          ]
        },
        {
          "isApiGroup": true,
          "type": "method",
          "name": "Method",
          "groupName": "Methods",
          "items": [
            {
              "isApiItem": true,
              "type": "method",
              "name": "$beforeInit",
              "fullName": "mixin:Observable.$beforeInit",
              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/mixin/Observable.js",
              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/mixin/Observable.js",
              "fileType": "js",
              "template": "js.item.method",
              "level": 2,
              "flags": {
                "access": [
                  {
                    "contentType": "string",
                    "content": "private",
                    "template": "js.flag.access"
                  }
                ]
              },
              "plainFlags": {
                "access": [
                  "private"
                ]
              },
              "booleanFlags": [],
              "children": [
                {
                  "isApiGroup": true,
                  "type": "param",
                  "items": [
                    {
                      "isApiItem": true,
                      "type": "param",
                      "name": "cfg",
                      "fullName": "mixin:Observable.$beforeInit/cfg",
                      "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/mixin/Observable.js",
                      "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/mixin/Observable.js",
                      "fileType": "js",
                      "template": "js.item.param",
                      "level": 3,
                      "flags": {
                        "type": [
                          {
                            "contentType": "string",
                            "content": "object",
                            "template": "js.flag.type"
                          }
                        ]
                      },
                      "plainFlags": {
                        "type": [
                          "object"
                        ]
                      },
                      "booleanFlags": [],
                      "children": [
                        {
                          "isApiGroup": true,
                          "type": "property",
                          "name": "Property",
                          "groupName": "Properties",
                          "items": [
                            {
                              "isApiItem": true,
                              "type": "property",
                              "name": "callback",
                              "fullName": "mixin:Observable.$beforeInit/cfg.callback",
                              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/mixin/Observable.js",
                              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/mixin/Observable.js",
                              "fileType": "js",
                              "template": "js.item.property",
                              "level": 4,
                              "flags": {
                                "type": [
                                  {
                                    "contentType": "string",
                                    "content": "object",
                                    "template": "js.flag.type"
                                  }
                                ]
                              },
                              "plainFlags": {
                                "type": [
                                  "object"
                                ]
                              },
                              "booleanFlags": [],
                              "children": [
                                {
                                  "isApiGroup": true,
                                  "type": "property",
                                  "name": "Property",
                                  "groupName": "Properties",
                                  "items": [
                                    {
                                      "isApiItem": true,
                                      "type": "property",
                                      "name": "context",
                                      "fullName": "mixin:Observable.$beforeInit/cfg.callback.context",
                                      "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/mixin/Observable.js",
                                      "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/mixin/Observable.js",
                                      "fileType": "js",
                                      "template": "js.item.property",
                                      "level": 5,
                                      "flags": {
                                        "type": [
                                          {
                                            "contentType": "string",
                                            "content": "object",
                                            "template": "js.flag.type"
                                          }
                                        ]
                                      },
                                      "plainFlags": {
                                        "type": [
                                          "object"
                                        ]
                                      },
                                      "booleanFlags": [],
                                      "children": [],
                                      "childTypes": [],
                                      "description": [
                                        {
                                          "contentType": "string",
                                          "content": "All given listeners context",
                                          "template": "js.flag.description"
                                        }
                                      ]
                                    },
                                    {
                                      "isApiItem": true,
                                      "type": "property",
                                      "name": "scope",
                                      "fullName": "mixin:Observable.$beforeInit/cfg.callback.scope",
                                      "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/mixin/Observable.js",
                                      "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/mixin/Observable.js",
                                      "fileType": "js",
                                      "template": "js.item.property",
                                      "level": 5,
                                      "flags": {
                                        "type": [
                                          {
                                            "contentType": "string",
                                            "content": "object",
                                            "template": "js.flag.type"
                                          }
                                        ]
                                      },
                                      "plainFlags": {
                                        "type": [
                                          "object"
                                        ]
                                      },
                                      "booleanFlags": [],
                                      "children": [],
                                      "childTypes": [],
                                      "description": [
                                        {
                                          "contentType": "string",
                                          "content": "The same",
                                          "template": "js.flag.description"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "childTypes": [
                                "property"
                              ],
                              "description": [
                                {
                                  "contentType": "string",
                                  "content": "Here, except for 'context', '$context' and 'scope',\nkeys are event names and values are listeners.",
                                  "template": "js.flag.description"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "childTypes": [
                        "property"
                      ],
                      "line": 52,
                      "description": [
                        {
                          "contentType": "string",
                          "content": "This is a config that was passed to the host object's constructor.\nIt is being passed to mixin's $beforeInit automatically.",
                          "template": "js.flag.description"
                        }
                      ]
                    }
                  ]
                }
              ],
              "childTypes": [
                "param"
              ],
              "line": 52
            },
            {
              "isApiItem": true,
              "type": "method",
              "name": "on",
              "fullName": "mixin:Observable.on",
              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/mixin/Observable.js",
              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/mixin/Observable.js",
              "fileType": "js",
              "template": "js.item.method",
              "level": 2,
              "flags": {
                "see": [
                  {
                    "contentType": "string",
                    "content": "[class:Observable.on](#class:Observable.on)",
                    "template": "js.flag.see"
                  }
                ]
              },
              "plainFlags": {
                "see": [
                  "[class:Observable.on](#class:Observable.on)"
                ]
              },
              "booleanFlags": [],
              "children": [],
              "childTypes": [],
              "line": 105
            },
            {
              "isApiItem": true,
              "type": "method",
              "name": "un",
              "fullName": "mixin:Observable.un",
              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/mixin/Observable.js",
              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/mixin/Observable.js",
              "fileType": "js",
              "template": "js.item.method",
              "level": 2,
              "flags": {
                "see": [
                  {
                    "contentType": "string",
                    "content": "[class:Observable.un](#class:Observable.un)",
                    "template": "js.flag.see"
                  }
                ]
              },
              "plainFlags": {
                "see": [
                  "[class:Observable.un](#class:Observable.un)"
                ]
              },
              "booleanFlags": [],
              "children": [],
              "childTypes": [],
              "line": 114
            },
            {
              "isApiItem": true,
              "type": "method",
              "name": "once",
              "fullName": "mixin:Observable.once",
              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/mixin/Observable.js",
              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/mixin/Observable.js",
              "fileType": "js",
              "template": "js.item.method",
              "level": 2,
              "flags": {
                "see": [
                  {
                    "contentType": "string",
                    "content": "[class:Observable.once](#class:Observable.once)",
                    "template": "js.flag.see"
                  }
                ]
              },
              "plainFlags": {
                "see": [
                  "[class:Observable.once](#class:Observable.once)"
                ]
              },
              "booleanFlags": [],
              "children": [],
              "childTypes": [],
              "line": 123
            },
            {
              "isApiItem": true,
              "type": "method",
              "name": "trigger",
              "fullName": "mixin:Observable.trigger",
              "file": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/mixin/Observable.js",
              "originalFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/src/mixin/Observable.js",
              "fileType": "js",
              "template": "js.item.method",
              "level": 2,
              "flags": {
                "see": [
                  {
                    "contentType": "string",
                    "content": "[class:Observable.trigger](#class:Observable.trigger)",
                    "template": "js.flag.see"
                  }
                ]
              },
              "plainFlags": {
                "see": [
                  "[class:Observable.trigger](#class:Observable.trigger)"
                ]
              },
              "booleanFlags": [],
              "children": [],
              "childTypes": [],
              "line": 132
            }
          ]
        }
      ],
      "childTypes": [
        "property",
        "method"
      ],
      "line": 13,
      "description": [
        {
          "contentType": "string",
          "content": "Mixin adds observable features to the host object.\n             It adds 'callback' option to the host config. See $beforeInit.\n             Mixin is designed for MetaphorJs class system.",
          "template": "js.flag.description"
        },
        {
          "contentType": "code",
          "content": "var MyClass = defineClass({\n    $class: \"MyClass\",\n    $mixins: [\"mixin.Observable\"],\n    $init: function() {\n        this.trigger(\"someEvent\", 123);\n    },\n\n    doSomeAction: function() {\n        // does some action\n        this.trigger(\"anotherEvent\", 234);\n    }\n});\n\nvar ParentClass = defineClass({\n    $init: function() {\n        this.my = new MyClass({\n            callback: {\n                context: this,\n                someEvent: this.onSomeEvent\n            }\n        });\n        this.my.on(\"anotherEvent\", this.onAnotherEvent, this);\n        this.my.doSomeAction();\n    },\n\n    onSomeEvent: function(value) {\n        // value == 123\n    },\n\n    onAnotherEvent: function(value) {\n        // value == 234\n    }\n});\n\nvar p = new ParentClass;",
          "template": "js.flag.description",
          "fromFile": "/Users/kuindji/projects/metaphorjs/metaphorjs-observable/examples/mixin.js",
          "fileType": "js"
        }
      ]
    }
  ],
  "structure": {
    "class": {
      "type": "class",
      "groupName": "Classes",
      "children": [
        {
          "id": "class:ObservableEvent",
          "name": "ObservableEvent"
        },
        {
          "id": "class:Observable",
          "name": "Observable"
        }
      ]
    },
    "mixin": {
      "type": "mixin",
      "groupName": "Mixins",
      "children": [
        {
          "id": "mixin:Observable",
          "name": "Observable"
        }
      ]
    }
  }
}